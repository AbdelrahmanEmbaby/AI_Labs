/*! marked 12.0.1 - https://github.com/markedjs/marked */
!function (t, e) { "object" == typeof exports && "undefined" != typeof module ? e(exports) : "function" == typeof define && define.amd ? define(["exports"], e) : e((t = "undefined" != typeof globalThis ? globalThis : t || self).marked = {}) }(this, (function (t) { "use strict"; function e(t) { return t.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#39;") } function n(t, e, n) { return (e = e || "").replace(/%([a-z])/gi, (function (e, r) { switch (e.toLowerCase()) { case "%": return "%"; case "s": return String(t); case "d": return +String(t); case "i": return parseInt(String(t), 10); case "f": return parseFloat(String(t)); case "o": return JSON.stringify(t); case "n": return JSON.stringify(t, null, n) } })) } function r(t) { return t } var o = { breaks: !1, gfm: !0, tables: !0, smartLists: !1, smartypants: !1, xhtml: !1, headerIds: !0, headerPrefix: "", langPrefix: "language-", sanitize: !1, silent: !1, highlight: null, baseUrl: null, mangle: !0 }; function a() { return a = Object.assign || function (t) { for (var e = 1; e < arguments.length; e++) { var n = arguments[e]; for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (t[r] = n[r]) } return t }, a.apply(this, arguments) } function i(t) { if (null == t) return ""; for (var e, n, r = "", o = 0, a = t.length; o < a; o++)switch (e = t.charCodeAt(o)) { case 10: r += "<br>"; break; case 60: r += "&lt;"; break; case 62: r += "&gt;"; break; case 38: r += "&amp;"; break; case 34: r += "&quot;"; break; default: r += (n = t.charAt(o)) }return r } t.parse = function (t, r) { return new (function (t, e) { this.options = a({}, o, e), this.options.renderer || (this.options.renderer = new (function () { })), this.inlineLexer = new (function (t, e) { this.options = a({}, o, e) })(t, this.options), this.tokenizer = new (function (t, e) { this.options = a({}, o, e) })(this.options), this.tokens = [], this.links = {}, this.footnotes = {}, this.footnoteIdentifiers = [], this.tokenizer.tokens = this.tokens, this.inlineLexer.links = this.links })(t, r) }; var u = function (t) { return e(t) }; t.marked = u, t.options = o, Object.defineProperty(t, "__esModule", { value: !0 }) }));
